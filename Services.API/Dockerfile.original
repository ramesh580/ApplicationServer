#Depending on the operating system of the host machines(s) that will build or run the containers, the image specified in the FROM statement may need to be changed.
#For more information, please see https://aka.ms/containercompat

#FROM microsoft/dotnet:2.2-aspnetcore-runtime-nanoserver-1803 AS base
#WORKDIR /app
#EXPOSE 80
#EXPOSE 443
#
#FROM microsoft/dotnet:2.2-sdk-nanoserver-1803 AS build
#WORKDIR /src
#COPY ["Services.API/Services.API.csproj", "Services.API/"]
#COPY ["Services.API.DataModel/Services.API.DataModel.csproj", "Services.API.DataModel/"]
#COPY ["Services.API.Core/Services.API.Core.csproj", "Services.API.Core/"]
#COPY ["Services.API.DataAccess/Services.API.DataAccess.csproj", "Services.API.DataAccess/"]
#RUN dotnet restore "Services.API/Services.API.csproj"
#COPY . .
#WORKDIR "/src/Services.API"
#RUN dotnet build "Services.API.csproj" -c Release -o /app
#
#FROM build AS publish
#RUN dotnet publish "Services.API.csproj" -c Release -o /app
#
#FROM base AS final
#WORKDIR /app
#COPY --from=publish /app .
#ENTRYPOINT ["dotnet", "Services.API.dll"]

FROM microsoft/dotnet:sdk AS build-env
WORKDIR /app

# Copy csproj and restore as distinct layers
COPY ["Services.API.csproj", "Services.API/"]
COPY ["Services.API.DataModel/Services.API.DataModel.csproj", "Services.API.DataModel/"]
COPY ["Services.API.Core/Services.API.Core.csproj", "Services.API.Core/"]
COPY ["Services.API.DataAccess/Services.API.DataAccess.csproj", "Services.API.DataAccess/"]
RUN dotnet restore "Services.API/Services.API.csproj"

# Copy everything else and build
COPY . ./
RUN dotnet publish -c Release -o out

# Build runtime image
FROM microsoft/dotnet:aspnetcore-runtime
WORKDIR /app
COPY --from=build-env /app/out .
ENTRYPOINT ["dotnet", "Services.API.dll"]
#FROM microsoft/dotnet:sdk AS build-env
#WORKDIR /app
#COPY /app /app
#ENTRYPOINT ["dotnet", "Services.API.dll"]

